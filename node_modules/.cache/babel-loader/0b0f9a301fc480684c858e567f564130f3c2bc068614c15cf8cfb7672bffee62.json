{"ast":null,"code":"import _objectSpread from\"C:/Users/tkaak/Documents/GitHub/parkgolf_js/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import styles from'../styles/styles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ScoreModal=_ref=>{let{modalData,onSubmit,onClose,onScoreChange,onDayChange}=_ref;const calculateCourseTotal=scores=>{return scores.reduce((sum,score)=>sum+(parseInt(score)||0),0);};const inputStyle=_objectSpread(_objectSpread({},styles.input),{},{width:'40px',height:'32px',textAlign:'center'});const holeNumberStyle={width:'30px',textAlign:'center',fontSize:'11px',color:'#666',marginBottom:'2px'};const courseContainerStyle={marginBottom:'15px'};const scoreRowStyle={display:'flex',gap:'3px',flexWrap:'wrap'};return/*#__PURE__*/_jsx(\"div\",{style:styles.modal.overlay,children:/*#__PURE__*/_jsxs(\"div\",{style:styles.modal.content,children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:'center',marginBottom:'8px',fontSize:'16px'},children:\"9\\uD640 \\uC810\\uC218 \\uC785\\uB825\"}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginBottom:'15px'},children:/*#__PURE__*/_jsx(\"select\",{value:modalData.selectedDay||1,onChange:e=>onDayChange(parseInt(e.target.value)),style:{padding:'6px',borderRadius:'4px',border:'1px solid #ccc',marginBottom:'8px',width:'120px',fontSize:'13px'},children:Array.from({length:modalData.totalDays||1},(_,i)=>/*#__PURE__*/_jsxs(\"option\",{value:i+1,children:[i+1,\"\\uC77C\\uCC28\"]},i+1))})}),/*#__PURE__*/_jsx(\"div\",{style:{maxHeight:'60vh',overflowY:'auto',marginBottom:'20px'},children:Object.entries(modalData.scores).map(_ref2=>{let[courseKey,scores]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{style:courseContainerStyle,children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontWeight:'bold',marginBottom:'10px'},children:[courseKey.replace(/_\\d+일차 합계$/,''),\" (\\uD569\\uACC4: \",calculateCourseTotal(scores),\")\"]}),/*#__PURE__*/_jsx(\"div\",{style:scoreRowStyle,children:scores.map((_,idx)=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:holeNumberStyle,children:[idx+1,\"\\uD640\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:scores[idx],onChange:e=>{const value=e.target.value;// 빈 값이거나 숫자만 허용\nif(value===''||/^\\d{1,2}$/.test(value)){// 99 이하의 숫자만 허용\nif(value===''||parseInt(value)<=99){onScoreChange(courseKey,idx,value);}}},style:inputStyle,maxLength:2,pattern:\"\\\\d*\",inputMode:\"numeric\"})]},\"hole-\".concat(idx)))})]},courseKey);})}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginTop:'10px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px',fontWeight:'bold'},children:[\"\\uCD1D \\uD569\\uACC4: \",Object.values(modalData.scores).reduce((total,scores)=>total+calculateCourseTotal(scores),0)]}),/*#__PURE__*/_jsx(\"button\",{style:styles.button,onClick:onSubmit,children:\"\\u2705 \\uC81C\\uCD9C\"}),/*#__PURE__*/_jsx(\"button\",{style:_objectSpread(_objectSpread({},styles.button),{},{backgroundColor:'#aaa',marginLeft:'10px'}),onClick:onClose,children:\"\\u274C \\uCDE8\\uC18C\"})]})]})});};","map":{"version":3,"names":["React","styles","jsx","_jsx","jsxs","_jsxs","ScoreModal","_ref","modalData","onSubmit","onClose","onScoreChange","onDayChange","calculateCourseTotal","scores","reduce","sum","score","parseInt","inputStyle","_objectSpread","input","width","height","textAlign","holeNumberStyle","fontSize","color","marginBottom","courseContainerStyle","scoreRowStyle","display","gap","flexWrap","style","modal","overlay","children","content","value","selectedDay","onChange","e","target","padding","borderRadius","border","Array","from","length","totalDays","_","i","maxHeight","overflowY","Object","entries","map","_ref2","courseKey","fontWeight","replace","idx","flexDirection","alignItems","type","test","maxLength","pattern","inputMode","concat","marginTop","values","total","button","onClick","backgroundColor","marginLeft"],"sources":["C:/Users/tkaak/Documents/GitHub/parkgolf_js/src/components/ScoreModal.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/styles';\n\nexport const ScoreModal = ({ modalData, onSubmit, onClose, onScoreChange, onDayChange }) => {\n  const calculateCourseTotal = (scores) => {\n    return scores.reduce((sum, score) => sum + (parseInt(score) || 0), 0);\n  };\n\n  const inputStyle = {\n    ...styles.input,\n    width: '40px',\n    height: '32px',\n    textAlign: 'center'\n  };\n\n  const holeNumberStyle = {\n    width: '30px',\n    textAlign: 'center',\n    fontSize: '11px',\n    color: '#666',\n    marginBottom: '2px'\n  };\n\n  const courseContainerStyle = {\n    marginBottom: '15px'\n  };\n\n  const scoreRowStyle = {\n    display: 'flex',\n    gap: '3px',\n    flexWrap: 'wrap'\n  };\n\n  return (\n    <div style={styles.modal.overlay}>\n      <div style={styles.modal.content}>\n        <h3 style={{ textAlign: 'center', marginBottom: '8px', fontSize: '16px' }}>\n          9홀 점수 입력\n        </h3>\n        <div style={{ textAlign: 'center', marginBottom: '15px' }}>\n          <select \n            value={modalData.selectedDay || 1} \n            onChange={(e) => onDayChange(parseInt(e.target.value))}\n            style={{\n              padding: '6px',\n              borderRadius: '4px',\n              border: '1px solid #ccc',\n              marginBottom: '8px',\n              width: '120px',\n              fontSize: '13px'\n            }}\n          >\n            {Array.from({ length: modalData.totalDays || 1 }, (_, i) => (\n              <option key={i + 1} value={i + 1}>{i + 1}일차</option>\n            ))}\n          </select>\n        </div>\n        <div style={{ maxHeight: '60vh', overflowY: 'auto', marginBottom: '20px' }}>\n          {Object.entries(modalData.scores).map(([courseKey, scores]) => (\n            <div key={courseKey} style={courseContainerStyle}>\n              <div style={{ fontWeight: 'bold', marginBottom: '10px' }}>\n                {courseKey.replace(/_\\d+일차 합계$/, '')} (합계: {calculateCourseTotal(scores)})\n              </div>\n              <div style={scoreRowStyle}>\n                {scores.map((_, idx) => (\n                  <div key={`hole-${idx}`} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                    <div style={holeNumberStyle}>{idx + 1}홀</div>\n                    <input\n                      type=\"text\"\n                      value={scores[idx]}\n                      onChange={(e) => {\n                        const value = e.target.value;\n                        // 빈 값이거나 숫자만 허용\n                        if (value === '' || /^\\d{1,2}$/.test(value)) {\n                          // 99 이하의 숫자만 허용\n                          if (value === '' || parseInt(value) <= 99) {\n                            onScoreChange(courseKey, idx, value);\n                          }\n                        }\n                      }}\n                      style={inputStyle}\n                      maxLength={2}\n                      pattern=\"\\d*\"\n                      inputMode=\"numeric\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n          <div style={{ marginBottom: '15px', fontWeight: 'bold' }}>\n            총 합계: {\n              Object.values(modalData.scores)\n                .reduce((total, scores) => total + calculateCourseTotal(scores), 0)\n            }\n          </div>\n          <button style={styles.button} onClick={onSubmit}>\n            ✅ 제출\n          </button>\n          <button\n            style={{ ...styles.button, backgroundColor: '#aaa', marginLeft: '10px' }}\n            onClick={onClose}\n          >\n            ❌ 취소\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nScoreModal.propTypes = {\n  modalData: PropTypes.shape({\n    rowIndex: PropTypes.number.isRequired,\n    scores: PropTypes.object.isRequired,\n    selectedDay: PropTypes.number.isRequired,\n    totalDays: PropTypes.number.isRequired\n  }).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onScoreChange: PropTypes.func.isRequired,\n  onDayChange: PropTypes.func.isRequired\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}