{"ast":null,"code":"import _objectSpread from\"C:/Users/tkaak/Documents/GitHub/parkgolf_js/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState}from'react';export const useModal=()=>{const[modalData,setModalData]=useState(null);const handleOpenScoreModal=(rowIndex,courses,totalDays)=>{if(!courses||!Object.keys(courses).length){alert(\"먼저 코스를 추가하세요.\");return;}const allScores={};Object.keys(courses).forEach(col=>{allScores[col]=courses[col].map(v=>v===0?'':v.toString());});const initialScores={};Object.keys(courses).forEach(col=>{if(col.includes('_1일차')){initialScores[col]=allScores[col];}});setModalData({rowIndex,scores:initialScores,selectedDay:1,totalDays,allScores});};const handleCloseModal=()=>{setModalData(null);};const handleScoreChange=(courseKey,holeIndex,value)=>{setModalData(prev=>{const newScores=_objectSpread({},prev.scores);const newAllScores=_objectSpread({},prev.allScores);newScores[courseKey][holeIndex]=value;newAllScores[courseKey][holeIndex]=value;return _objectSpread(_objectSpread({},prev),{},{scores:newScores,allScores:newAllScores});});};const handleDayChange=(day,courses)=>{setModalData(prev=>{const newScores={};Object.keys(prev.allScores).forEach(col=>{if(col.includes(\"_\".concat(day,\"\\uC77C\\uCC28\"))){newScores[col]=prev.allScores[col];}});return _objectSpread(_objectSpread({},prev),{},{selectedDay:day,scores:newScores});});};return{modalData,setModalData,handleOpenScoreModal,handleCloseModal,handleScoreChange,handleDayChange};};","map":{"version":3,"names":["useState","useModal","modalData","setModalData","handleOpenScoreModal","rowIndex","courses","totalDays","Object","keys","length","alert","allScores","forEach","col","map","v","toString","initialScores","includes","scores","selectedDay","handleCloseModal","handleScoreChange","courseKey","holeIndex","value","prev","newScores","_objectSpread","newAllScores","handleDayChange","day","concat"],"sources":["C:/Users/tkaak/Documents/GitHub/parkgolf_js/src/hooks/useModal.js"],"sourcesContent":["import { useState } from 'react';\n\nexport const useModal = () => {\n  const [modalData, setModalData] = useState(null);\n\n  const handleOpenScoreModal = (rowIndex, courses, totalDays) => {\n    if (!courses || !Object.keys(courses).length) {\n      alert(\"먼저 코스를 추가하세요.\");\n      return;\n    }\n    \n    const allScores = {};\n    Object.keys(courses).forEach(col => {\n      allScores[col] = courses[col].map(v => v === 0 ? '' : v.toString());\n    });\n    \n    const initialScores = {};\n    Object.keys(courses).forEach(col => {\n      if (col.includes('_1일차')) {\n        initialScores[col] = allScores[col];\n      }\n    });\n    \n    setModalData({ \n      rowIndex, \n      scores: initialScores,\n      selectedDay: 1,\n      totalDays,\n      allScores\n    });\n  };\n\n  const handleCloseModal = () => {\n    setModalData(null);\n  };\n\n  const handleScoreChange = (courseKey, holeIndex, value) => {\n    setModalData(prev => {\n      const newScores = { ...prev.scores };\n      const newAllScores = { ...prev.allScores };\n      \n      newScores[courseKey][holeIndex] = value;\n      newAllScores[courseKey][holeIndex] = value;\n      \n      return {\n        ...prev,\n        scores: newScores,\n        allScores: newAllScores\n      };\n    });\n  };\n\n  const handleDayChange = (day, courses) => {\n    setModalData(prev => {\n      const newScores = {};\n      Object.keys(prev.allScores).forEach(col => {\n        if (col.includes(`_${day}일차`)) {\n          newScores[col] = prev.allScores[col];\n        }\n      });\n\n      return {\n        ...prev,\n        selectedDay: day,\n        scores: newScores\n      };\n    });\n  };\n\n  return {\n    modalData,\n    setModalData,\n    handleOpenScoreModal,\n    handleCloseModal,\n    handleScoreChange,\n    handleDayChange\n  };\n}; "],"mappings":"gIAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGH,QAAQ,CAAC,IAAI,CAAC,CAEhD,KAAM,CAAAI,oBAAoB,CAAGA,CAACC,QAAQ,CAAEC,OAAO,CAAEC,SAAS,GAAK,CAC7D,GAAI,CAACD,OAAO,EAAI,CAACE,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,MAAM,CAAE,CAC5CC,KAAK,CAAC,eAAe,CAAC,CACtB,OACF,CAEA,KAAM,CAAAC,SAAS,CAAG,CAAC,CAAC,CACpBJ,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACO,OAAO,CAACC,GAAG,EAAI,CAClCF,SAAS,CAACE,GAAG,CAAC,CAAGR,OAAO,CAACQ,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,EAAIA,CAAC,GAAK,CAAC,CAAG,EAAE,CAAGA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CACrE,CAAC,CAAC,CAEF,KAAM,CAAAC,aAAa,CAAG,CAAC,CAAC,CACxBV,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACO,OAAO,CAACC,GAAG,EAAI,CAClC,GAAIA,GAAG,CAACK,QAAQ,CAAC,MAAM,CAAC,CAAE,CACxBD,aAAa,CAACJ,GAAG,CAAC,CAAGF,SAAS,CAACE,GAAG,CAAC,CACrC,CACF,CAAC,CAAC,CAEFX,YAAY,CAAC,CACXE,QAAQ,CACRe,MAAM,CAAEF,aAAa,CACrBG,WAAW,CAAE,CAAC,CACdd,SAAS,CACTK,SACF,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAU,gBAAgB,CAAGA,CAAA,GAAM,CAC7BnB,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAED,KAAM,CAAAoB,iBAAiB,CAAGA,CAACC,SAAS,CAAEC,SAAS,CAAEC,KAAK,GAAK,CACzDvB,YAAY,CAACwB,IAAI,EAAI,CACnB,KAAM,CAAAC,SAAS,CAAAC,aAAA,IAAQF,IAAI,CAACP,MAAM,CAAE,CACpC,KAAM,CAAAU,YAAY,CAAAD,aAAA,IAAQF,IAAI,CAACf,SAAS,CAAE,CAE1CgB,SAAS,CAACJ,SAAS,CAAC,CAACC,SAAS,CAAC,CAAGC,KAAK,CACvCI,YAAY,CAACN,SAAS,CAAC,CAACC,SAAS,CAAC,CAAGC,KAAK,CAE1C,OAAAG,aAAA,CAAAA,aAAA,IACKF,IAAI,MACPP,MAAM,CAAEQ,SAAS,CACjBhB,SAAS,CAAEkB,YAAY,GAE3B,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGA,CAACC,GAAG,CAAE1B,OAAO,GAAK,CACxCH,YAAY,CAACwB,IAAI,EAAI,CACnB,KAAM,CAAAC,SAAS,CAAG,CAAC,CAAC,CACpBpB,MAAM,CAACC,IAAI,CAACkB,IAAI,CAACf,SAAS,CAAC,CAACC,OAAO,CAACC,GAAG,EAAI,CACzC,GAAIA,GAAG,CAACK,QAAQ,KAAAc,MAAA,CAAKD,GAAG,gBAAI,CAAC,CAAE,CAC7BJ,SAAS,CAACd,GAAG,CAAC,CAAGa,IAAI,CAACf,SAAS,CAACE,GAAG,CAAC,CACtC,CACF,CAAC,CAAC,CAEF,OAAAe,aAAA,CAAAA,aAAA,IACKF,IAAI,MACPN,WAAW,CAAEW,GAAG,CAChBZ,MAAM,CAAEQ,SAAS,GAErB,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,CACL1B,SAAS,CACTC,YAAY,CACZC,oBAAoB,CACpBkB,gBAAgB,CAChBC,iBAAiB,CACjBQ,eACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}