{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tkaak\\\\Documents\\\\GitHub\\\\parkgolf_js\\\\src\\\\hooks\\\\useTableEvents.js\";\nimport { saveToFile, loadFromFile } from '../utils/fileHandlers';\nimport html2canvas from 'html2canvas';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GroupSheet } from '../components/GroupSheet';\nimport { calculateTotalScore } from '../utils/scoreUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useTableEvents = ({\n  rows,\n  setRows,\n  courseColumns,\n  setCourseColumns,\n  tournamentName,\n  setTournamentName,\n  totalDays,\n  setTotalDays,\n  parData,\n  setParData\n}) => {\n  const handleFileLoad = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const data = JSON.parse(e.target.result);\n        // 각 행에 대해 총합계 계산\n        const updatedRows = data.rows.map(row => ({\n          ...row,\n          total: calculateTotalScore(row.courses)\n        }));\n        data.rows = updatedRows;\n        setRows(data.rows);\n        setCourseColumns(data.courseColumns);\n        setTournamentName(data.tournamentName);\n        // 일차 수 계산\n        const days = new Set(data.courseColumns.map(col => parseInt(col.split('_')[1])));\n        setTotalDays(days.size);\n        // parData 복원\n        if (data.parData) {\n          setParData(data.parData);\n        }\n      } catch (error) {\n        console.error('파일 로드 중 오류 발생:', error);\n        alert('파일 형식이 올바르지 않습니다.');\n      }\n    };\n    reader.readAsText(file);\n  };\n  const handleSaveFile = () => {\n    const data = {\n      tournamentName,\n      courseColumns,\n      rows,\n      totalDays,\n      parData\n    };\n    saveToFile(data, `${tournamentName || '대회'}.json`);\n  };\n  const handleCaptureTable = async () => {\n    try {\n      // 임시로 프린트 모드 스타일 적용\n      const printArea = document.getElementById('printArea');\n      const originalStyle = printArea.style.cssText;\n\n      // 캡처를 위한 스타일 적용\n      printArea.style.cssText = `\n        margin: 0 !important;\n        padding: 10px !important;\n        width: 100% !important;\n        background-color: white !important;\n        display: flex !important;\n        justify-content: center !important;\n      `;\n\n      // 테이블 스타일 임시 저장 및 수정\n      const table = printArea.querySelector('table');\n      const originalTableStyle = table.style.cssText;\n      table.style.cssText = `\n        width: 98% !important;\n        margin: 0 auto !important;\n        table-layout: fixed !important;\n      `;\n\n      // 액션 열 숨기기\n      const actionColumns = document.querySelectorAll('.action-column');\n      actionColumns.forEach(col => {\n        col.style.display = 'none';\n      });\n      const canvas = await html2canvas(printArea, {\n        scale: 2,\n        // 해상도 2배 증가\n        useCORS: true,\n        backgroundColor: '#ffffff',\n        width: printArea.scrollWidth,\n        height: printArea.scrollHeight,\n        windowWidth: printArea.scrollWidth,\n        windowHeight: printArea.scrollHeight\n      });\n\n      // 원래 스타일로 복구\n      printArea.style.cssText = originalStyle;\n      table.style.cssText = originalTableStyle;\n      actionColumns.forEach(col => {\n        col.style.display = '';\n      });\n\n      // 이미지 저장\n      const link = document.createElement('a');\n      link.download = `${tournamentName || '파크골프'}_점수표.png`;\n      link.href = canvas.toDataURL('image/png');\n      link.click();\n    } catch (error) {\n      console.error('이미지 저장 중 오류 발생:', error);\n      alert('이미지 저장 중 오류가 발생했습니다.');\n    }\n  };\n  const handleCaptureGroupSheet = async () => {\n    // 조별로 선수들을 그룹화\n    const groupedPlayers = rows.reduce((acc, player) => {\n      const group = player.group || '미지정';\n      if (!acc[group]) {\n        acc[group] = [];\n      }\n      acc[group].push(player);\n      return acc;\n    }, {});\n\n    // 새 탭 생성\n    const newTab = window.open('', '_blank');\n    newTab.document.write(`\n      <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <title>${tournamentName} - 조 용지</title>\n          <style>\n            @page {\n              size: A4 portrait;\n              margin: 0;\n            }\n            html {\n              background: #eee;\n            }\n            body {\n              margin: 0;\n              padding: 0;\n              background: #eee;\n            }\n            .page {\n              width: 210mm;\n              height: 297mm;\n              padding: 10mm;\n              margin: 10mm auto;\n              background: white;\n              box-sizing: border-box;\n              page-break-after: always;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n            }\n            .page:last-child {\n              page-break-after: auto;\n            }\n            @media print {\n              html, body {\n                background: white;\n                height: auto;\n              }\n              .page {\n                margin: 0;\n                padding: 10mm;\n                height: 297mm;\n                page-break-after: always;\n              }\n              .page:last-child {\n                page-break-after: auto;\n              }\n            }\n          </style>\n        </head>\n        <body>\n    `);\n\n    // 임시 컨테이너 생성\n    const container = document.createElement('div');\n    container.style.cssText = `\n      position: fixed;\n      left: -9999px;\n      top: 0;\n      width: 210mm;\n      height: 297mm;\n      background: white;\n      padding: 0;\n    `;\n    document.body.appendChild(container);\n    try {\n      // 각 조별로 이미지 생성\n      for (const [group, players] of Object.entries(groupedPlayers)) {\n        // GroupSheet 렌더링\n        ReactDOM.render(/*#__PURE__*/_jsxDEV(GroupSheet, {\n          group: group,\n          players: players,\n          courseColumns: courseColumns,\n          tournamentName: tournamentName,\n          parData: parData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), container);\n\n        // 잠시 대기하여 렌더링이 완료되도록 함\n        await new Promise(resolve => setTimeout(resolve, 100));\n\n        // 이미지 캡처\n        const canvas = await html2canvas(container, {\n          scale: 2,\n          useCORS: true,\n          logging: false,\n          width: container.offsetWidth,\n          height: container.offsetHeight,\n          windowWidth: 210 * 3.78,\n          // mm to px\n          windowHeight: 297 * 3.78\n        });\n\n        // 이미지를 새 탭에 추가\n        const image = canvas.toDataURL('image/png', 1.0);\n        newTab.document.write(`\n          <div class=\"page\">\n            <img src=\"${image}\" style=\"width: 100%; height: auto;\">\n          </div>\n        `);\n      }\n\n      // HTML 문서 완성\n      newTab.document.write('</body></html>');\n      newTab.document.close();\n      newTab.focus();\n    } catch (error) {\n      console.error('조 용지 생성 중 오류 발생:', error);\n      alert('조 용지 생성 중 오류가 발생했습니다.');\n    } finally {\n      // 임시 컨테이너 제거\n      ReactDOM.unmountComponentAtNode(container);\n      document.body.removeChild(container);\n    }\n  };\n  return {\n    handleFileLoad,\n    handleSaveFile,\n    handleCaptureTable,\n    handleCaptureGroupSheet\n  };\n};","map":{"version":3,"names":["saveToFile","loadFromFile","html2canvas","React","ReactDOM","GroupSheet","calculateTotalScore","jsxDEV","_jsxDEV","useTableEvents","rows","setRows","courseColumns","setCourseColumns","tournamentName","setTournamentName","totalDays","setTotalDays","parData","setParData","handleFileLoad","event","file","target","files","reader","FileReader","onload","e","data","JSON","parse","result","updatedRows","map","row","total","courses","days","Set","col","parseInt","split","size","error","console","alert","readAsText","handleSaveFile","handleCaptureTable","printArea","document","getElementById","originalStyle","style","cssText","table","querySelector","originalTableStyle","actionColumns","querySelectorAll","forEach","display","canvas","scale","useCORS","backgroundColor","width","scrollWidth","height","scrollHeight","windowWidth","windowHeight","link","createElement","download","href","toDataURL","click","handleCaptureGroupSheet","groupedPlayers","reduce","acc","player","group","push","newTab","window","open","write","container","body","appendChild","players","Object","entries","render","fileName","_jsxFileName","lineNumber","columnNumber","Promise","resolve","setTimeout","logging","offsetWidth","offsetHeight","image","close","focus","unmountComponentAtNode","removeChild"],"sources":["C:/Users/tkaak/Documents/GitHub/parkgolf_js/src/hooks/useTableEvents.js"],"sourcesContent":["import { saveToFile, loadFromFile } from '../utils/fileHandlers';\nimport html2canvas from 'html2canvas';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GroupSheet } from '../components/GroupSheet';\nimport { calculateTotalScore } from '../utils/scoreUtils';\n\nexport const useTableEvents = ({\n  rows,\n  setRows,\n  courseColumns,\n  setCourseColumns,\n  tournamentName,\n  setTournamentName,\n  totalDays,\n  setTotalDays,\n  parData,\n  setParData\n}) => {\n  const handleFileLoad = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = JSON.parse(e.target.result);\n        // 각 행에 대해 총합계 계산\n        const updatedRows = data.rows.map(row => ({\n          ...row,\n          total: calculateTotalScore(row.courses)\n        }));\n        data.rows = updatedRows;\n        \n        setRows(data.rows);\n        setCourseColumns(data.courseColumns);\n        setTournamentName(data.tournamentName);\n        // 일차 수 계산\n        const days = new Set(data.courseColumns.map(col => parseInt(col.split('_')[1])));\n        setTotalDays(days.size);\n        // parData 복원\n        if (data.parData) {\n          setParData(data.parData);\n        }\n      } catch (error) {\n        console.error('파일 로드 중 오류 발생:', error);\n        alert('파일 형식이 올바르지 않습니다.');\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const handleSaveFile = () => {\n    const data = {\n      tournamentName,\n      courseColumns,\n      rows,\n      totalDays,\n      parData\n    };\n    saveToFile(data, `${tournamentName || '대회'}.json`);\n  };\n\n  const handleCaptureTable = async () => {\n    try {\n      // 임시로 프린트 모드 스타일 적용\n      const printArea = document.getElementById('printArea');\n      const originalStyle = printArea.style.cssText;\n      \n      // 캡처를 위한 스타일 적용\n      printArea.style.cssText = `\n        margin: 0 !important;\n        padding: 10px !important;\n        width: 100% !important;\n        background-color: white !important;\n        display: flex !important;\n        justify-content: center !important;\n      `;\n\n      // 테이블 스타일 임시 저장 및 수정\n      const table = printArea.querySelector('table');\n      const originalTableStyle = table.style.cssText;\n      table.style.cssText = `\n        width: 98% !important;\n        margin: 0 auto !important;\n        table-layout: fixed !important;\n      `;\n\n      // 액션 열 숨기기\n      const actionColumns = document.querySelectorAll('.action-column');\n      actionColumns.forEach(col => {\n        col.style.display = 'none';\n      });\n\n      const canvas = await html2canvas(printArea, {\n        scale: 2, // 해상도 2배 증가\n        useCORS: true,\n        backgroundColor: '#ffffff',\n        width: printArea.scrollWidth,\n        height: printArea.scrollHeight,\n        windowWidth: printArea.scrollWidth,\n        windowHeight: printArea.scrollHeight\n      });\n\n      // 원래 스타일로 복구\n      printArea.style.cssText = originalStyle;\n      table.style.cssText = originalTableStyle;\n      actionColumns.forEach(col => {\n        col.style.display = '';\n      });\n\n      // 이미지 저장\n      const link = document.createElement('a');\n      link.download = `${tournamentName || '파크골프'}_점수표.png`;\n      link.href = canvas.toDataURL('image/png');\n      link.click();\n    } catch (error) {\n      console.error('이미지 저장 중 오류 발생:', error);\n      alert('이미지 저장 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handleCaptureGroupSheet = async () => {\n    // 조별로 선수들을 그룹화\n    const groupedPlayers = rows.reduce((acc, player) => {\n      const group = player.group || '미지정';\n      if (!acc[group]) {\n        acc[group] = [];\n      }\n      acc[group].push(player);\n      return acc;\n    }, {});\n\n    // 새 탭 생성\n    const newTab = window.open('', '_blank');\n    newTab.document.write(`\n      <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <title>${tournamentName} - 조 용지</title>\n          <style>\n            @page {\n              size: A4 portrait;\n              margin: 0;\n            }\n            html {\n              background: #eee;\n            }\n            body {\n              margin: 0;\n              padding: 0;\n              background: #eee;\n            }\n            .page {\n              width: 210mm;\n              height: 297mm;\n              padding: 10mm;\n              margin: 10mm auto;\n              background: white;\n              box-sizing: border-box;\n              page-break-after: always;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n            }\n            .page:last-child {\n              page-break-after: auto;\n            }\n            @media print {\n              html, body {\n                background: white;\n                height: auto;\n              }\n              .page {\n                margin: 0;\n                padding: 10mm;\n                height: 297mm;\n                page-break-after: always;\n              }\n              .page:last-child {\n                page-break-after: auto;\n              }\n            }\n          </style>\n        </head>\n        <body>\n    `);\n\n    // 임시 컨테이너 생성\n    const container = document.createElement('div');\n    container.style.cssText = `\n      position: fixed;\n      left: -9999px;\n      top: 0;\n      width: 210mm;\n      height: 297mm;\n      background: white;\n      padding: 0;\n    `;\n    document.body.appendChild(container);\n\n    try {\n      // 각 조별로 이미지 생성\n      for (const [group, players] of Object.entries(groupedPlayers)) {\n        // GroupSheet 렌더링\n        ReactDOM.render(\n          <GroupSheet\n            group={group}\n            players={players}\n            courseColumns={courseColumns}\n            tournamentName={tournamentName}\n            parData={parData}\n          />,\n          container\n        );\n\n        // 잠시 대기하여 렌더링이 완료되도록 함\n        await new Promise(resolve => setTimeout(resolve, 100));\n\n        // 이미지 캡처\n        const canvas = await html2canvas(container, {\n          scale: 2,\n          useCORS: true,\n          logging: false,\n          width: container.offsetWidth,\n          height: container.offsetHeight,\n          windowWidth: 210 * 3.78,  // mm to px\n          windowHeight: 297 * 3.78\n        });\n\n        // 이미지를 새 탭에 추가\n        const image = canvas.toDataURL('image/png', 1.0);\n        newTab.document.write(`\n          <div class=\"page\">\n            <img src=\"${image}\" style=\"width: 100%; height: auto;\">\n          </div>\n        `);\n      }\n\n      // HTML 문서 완성\n      newTab.document.write('</body></html>');\n      newTab.document.close();\n      newTab.focus();\n    } catch (error) {\n      console.error('조 용지 생성 중 오류 발생:', error);\n      alert('조 용지 생성 중 오류가 발생했습니다.');\n    } finally {\n      // 임시 컨테이너 제거\n      ReactDOM.unmountComponentAtNode(container);\n      document.body.removeChild(container);\n    }\n  };\n\n  return {\n    handleFileLoad,\n    handleSaveFile,\n    handleCaptureTable,\n    handleCaptureGroupSheet\n  };\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}